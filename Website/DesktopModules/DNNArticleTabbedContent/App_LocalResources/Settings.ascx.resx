<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblCSS.Text" xml:space="preserve">
    <value>CSS</value>
  </data>
  <data name="lblCSS.Help" xml:space="preserve">
    <value>Set the css of slider. Left it blank to restore default setting.</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Tabbed Content Settings</value>
  </data>
  <data name="lblInject.Text" xml:space="preserve">
    <value>Inject modules from</value>
  </data>
  <data name="lblautorotate_time.Help" xml:space="preserve">
    <value>Autorote time(second)</value>
  </data>
  <data name="lblautorotate_time.Text" xml:space="preserve">
    <value>Autorote time</value>
  </data>
  <data name="lblDisplayTitle.Help" xml:space="preserve">
    <value>Display Title in slider tool bar</value>
  </data>
  <data name="lblDisplayTitle.Text" xml:space="preserve">
    <value>Display Title</value>
  </data>
  <data name="lblIFrameHeight.Help" xml:space="preserve">
    <value>The height of iframe which contains existing module or outside url.</value>
  </data>
  <data name="lblIFrameHeight.Text" xml:space="preserve">
    <value>IFrame Height</value>
  </data>
  <data name="lblIFrameWidth.Help" xml:space="preserve">
    <value>The width of iframe which contains existing module or outside url.</value>
  </data>
  <data name="lblIFrameWidth.Text" xml:space="preserve">
    <value>IFrame Width</value>
  </data>
  <data name="lblNextButtonText.Help" xml:space="preserve">
    <value>You can set the text of "Next" button. By default the text is "Next".</value>
  </data>
  <data name="lblNextButtonText.Text" xml:space="preserve">
    <value>Text of "Next" button</value>
  </data>
  <data name="lblIFrameScroll.Help" xml:space="preserve">
    <value>Select a scroll type of IFrame</value>
  </data>
  <data name="lblIFrameScroll.Text" xml:space="preserve">
    <value>IFrame Scroll Type</value>
  </data>
  <data name="lblInject.Help" xml:space="preserve">
    <value>You can inject modules from this portal or all portals of the host</value>
  </data>
  <data name="ModulesOptioinAuto.Text" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="ModulesOptioinNo.Text" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="ModulesOptioinYes.Text" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ModulesOptionHost.Text" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="ModulesOptionPortal.Text" xml:space="preserve">
    <value>Portal</value>
  </data>
  <data name="lblCategory.Help" xml:space="preserve">
    <value>Select a category</value>
  </data>
  <data name="lblCategory.Text" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="lblTemplate.Help" xml:space="preserve">
    <value>Allows you to provide a custom template for displaying the items. Use parameters for dynamic substitution (see available tokens.).</value>
  </data>
  <data name="lblTemplate.Text" xml:space="preserve">
    <value>Display template</value>
  </data>
  <data name="lblTokens.Text" xml:space="preserve">
    <value>Available Tokens</value>
  </data>
  <data name="lblTokens.Help" xml:space="preserve">
    <value>Available Tokens. &lt;br&gt; The [URL] token is the url of article image. You can display the image by using: &amp;lt;img src='[URL]' border=0/&amp;gt;. &lt;br&gt; The [VIEWURL] token is the url of detail view page of the article. You can use &amp;lt;a href='[VIEWURL]' &amp;gt;More&amp;lt;/a&amp;gt; to create a link to the detail page. &lt;br&gt; The [RATINGIMAGE] token will create a five star rating image to represent rating of the atricle.</value>
  </data>
  <data name="lbModule.Help" xml:space="preserve">
    <value>Select a module</value>
  </data>
  <data name="lbModule.Text" xml:space="preserve">
    <value>Select a module</value>
  </data>
  <data name="lbNumber.Help" xml:space="preserve">
    <value>Display Number</value>
  </data>
  <data name="lbNumber.Text" xml:space="preserve">
    <value>Display Number</value>
  </data>
  <data name="lbOrderField.Help" xml:space="preserve">
    <value>Select a field.</value>
  </data>
  <data name="lbOrderField.Text" xml:space="preserve">
    <value>Display by </value>
  </data>
  <data name="lbThumbnailHeight.Help" xml:space="preserve">
    <value>Enter the height of rating image. </value>
  </data>
  <data name="lbThumbnailHeight.Text" xml:space="preserve">
    <value>Rating image height</value>
  </data>
  <data name="lbThumbnailWidth.Help" xml:space="preserve">
    <value>Enter the width of rating image.</value>
  </data>
  <data name="lbThumbnailWidth.Text" xml:space="preserve">
    <value>Rating image width</value>
  </data>
  <data name="lbDisplayTabInDiv.Help" xml:space="preserve">
    <value>Some tab style such as modernbricksmenu2 needs this setting enalbed</value>
  </data>
  <data name="lbDisplayTabInDiv.Text" xml:space="preserve">
    <value>Display Tab In DIV</value>
  </data>
  <data name="lblCssClass.Help" xml:space="preserve">
    <value>The css class of the tabs</value>
  </data>
  <data name="lblCssClass.Text" xml:space="preserve">
    <value>CssClass</value>
  </data>
  <data name="lbTabBeforeContent.Help" xml:space="preserve">
    <value>Display Tabs before content. Some tab style such as modernbricksmenu2 needs this setting disabled.</value>
  </data>
  <data name="lbTabBeforeContent.Text" xml:space="preserve">
    <value>Display Tabs before content</value>
  </data>
  <data name="DefaultDisplayTemplate.Text" xml:space="preserve">
    <value>&lt;a style="font-weight: bolder; font-size: 14px; color: #006600" href="[VIEWURL]"&gt;[TITLE]&lt;/a&gt;&lt;br&gt;&lt;img src="[URL]" border=0/&gt;&lt;br&gt;[DESCRIPTION]
           </value>
  </data>
  <data name="lbTabs.Help" xml:space="preserve">
    <value>Select a page to display content</value>
  </data>
  <data name="lbTabs.Text" xml:space="preserve">
    <value>Select a page to display content</value>
  </data>
  <data name="AllModule.Text" xml:space="preserve">
    <value>&lt;All Articles in this portal&gt;</value>
  </data>
  <data name="lbDisplayRandom.Help" xml:space="preserve">
    <value>Display Random</value>
  </data>
  <data name="lbDisplayRandom.Text" xml:space="preserve">
    <value>Display Random</value>
  </data>
  <data name="lbRecent.Help" xml:space="preserve">
    <value>Show articles published in the setting days.</value>
  </data>
  <data name="lbRecent.Text" xml:space="preserve">
    <value>Show Articles Published in (Days)</value>
  </data>
  <data name="lbFeaturedOnly.Help" xml:space="preserve">
    <value>Show featured articles only</value>
  </data>
  <data name="lbFeaturedOnly.Text" xml:space="preserve">
    <value>Featured Only</value>
  </data>
  <data name="lbCheckPermission.Help" xml:space="preserve">
    <value>List articles of which user has view permission only.</value>
  </data>
  <data name="lbCheckPermission.Text" xml:space="preserve">
    <value>Check Permission</value>
  </data>
  <data name="lbShowFeaturedFirst.Help" xml:space="preserve">
    <value>Show featured articles before other articles</value>
  </data>
  <data name="lbShowFeaturedFirst.Text" xml:space="preserve">
    <value>Show Featured First</value>
  </data>
  <data name="lbFeaturedDisplayType.Help" xml:space="preserve">
    <value>Featured Dispaly Type</value>
  </data>
  <data name="lbFeaturedDisplayType.Text" xml:space="preserve">
    <value>Featured Dispaly Type</value>
  </data>
  <data name="lbTitleLenght.Help" xml:space="preserve">
    <value>Title Length</value>
  </data>
  <data name="lbTitleLenght.Text" xml:space="preserve">
    <value>Title Length</value>
  </data>
</root>