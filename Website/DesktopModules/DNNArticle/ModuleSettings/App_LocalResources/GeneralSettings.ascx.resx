<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lbCacheType.Help" xml:space="preserve">
    <value>Cache Type</value>
  </data>
  <data name="lbCacheType.Text" xml:space="preserve">
    <value>Cache Type</value>
  </data>
  <data name="lbCheckPermission.Help" xml:space="preserve">
    <value>List articles of which user has view permission only.</value>
  </data>
  <data name="lbCheckPermission.Text" xml:space="preserve">
    <value>Check Permission</value>
  </data>
  <data name="lbDisplayCategory.Help" xml:space="preserve">
    <value>Display the drop down list of category.</value>
  </data>
  <data name="lbDisplayCategory.Text" xml:space="preserve">
    <value>Display category drop down list</value>
  </data>
  <data name="lbEditTab.Help" xml:space="preserve">
    <value>Select a page to edit content</value>
  </data>
  <data name="lbEditTab.Text" xml:space="preserve">
    <value>Select a page to edit content</value>
  </data>
  <data name="lbEnableMultiCategories.Help" xml:space="preserve">
    <value>In sub modules, allow to select categories from multi instances</value>
  </data>
  <data name="lbEnableMultiCategories.Text" xml:space="preserve">
    <value>In sub modules, allow to select categories from multi instances</value>
  </data>
  <data name="lbEnablePage.Help" xml:space="preserve">
    <value>Enable Page</value>
  </data>
  <data name="lbEnablePage.Text" xml:space="preserve">
    <value>Enable Page</value>
  </data>
  <data name="lbEnableRSS.Help" xml:space="preserve">
    <value>Enable RSS</value>
  </data>
  <data name="lbEnableRSS.Text" xml:space="preserve">
    <value>Enable RSS</value>
  </data>
  <data name="lbFilterjavascript.Help" xml:space="preserve">
    <value>Filter javascript when saving article</value>
  </data>
  <data name="lbFilterjavascript.Text" xml:space="preserve">
    <value>Filter javascript</value>
  </data>
  <data name="lbFooterTemplate.Help" xml:space="preserve">
    <value>Template after the list</value>
  </data>
  <data name="lbFooterTemplate.Text" xml:space="preserve">
    <value>Footer Template</value>
  </data>
  <data name="lbHeaderTemplate.Help" xml:space="preserve">
    <value>Template before the list</value>
  </data>
  <data name="lbHeaderTemplate.Text" xml:space="preserve">
    <value>Header Template</value>
  </data>
  <data name="lblCSS.Help" xml:space="preserve">
    <value>You can select a css file for the article list.</value>
  </data>
  <data name="lblCSS.Text" xml:space="preserve">
    <value>CSS File</value>
  </data>
  <data name="lblDisplayAll.Help" xml:space="preserve">
    <value>There will be an "All Articles" item in category dropdown list.</value>
  </data>
  <data name="lblDisplayAll.Text" xml:space="preserve">
    <value>Show "All articles" in category list</value>
  </data>
  <data name="lblDisplayAllArticles.Help" xml:space="preserve">
    <value>Show all articles, active articles or expired articles.</value>
  </data>
  <data name="lblDisplayAllArticles.Text" xml:space="preserve">
    <value>Show article</value>
  </data>
  <data name="lblRepeatLayout.Help" xml:space="preserve">
    <value>Repeat Layout</value>
  </data>
  <data name="lblRepeatLayout.Text" xml:space="preserve">
    <value>Repeat Layout</value>
  </data>
  <data name="lblShowMeToAdminOnly.Help" xml:space="preserve">
    <value>Show this module to admin only</value>
  </data>
  <data name="lblShowMeToAdminOnly.Text" xml:space="preserve">
    <value>Show this module to admin only</value>
  </data>
  <data name="lblShowMyArticles.Help" xml:space="preserve">
    <value>Show the link of My Articles</value>
  </data>
  <data name="lblShowMyArticles.Text" xml:space="preserve">
    <value>Show "My Articles" link</value>
  </data>
  <data name="lblTemplate.Help" xml:space="preserve">
    <value>Template of articles in list. Allows you to provide a custom template for displaying the items. Use parameters for dynamic substitution (see available tokens.). This template is for the list of main page.</value>
  </data>
  <data name="lblTemplate.Text" xml:space="preserve">
    <value>List Template</value>
  </data>
  <data name="lblURL.Help" xml:space="preserve">
    <value>The folder stores upload files. </value>
  </data>
  <data name="lblURL.Text" xml:space="preserve">
    <value>Upload Path</value>
  </data>
  <data name="lbModuleId.Help" xml:space="preserve">
    <value>Module Id of this instance</value>
  </data>
  <data name="lbModuleId.Text" xml:space="preserve">
    <value>Module Id of this instance</value>
  </data>
  <data name="lbNumber.Help" xml:space="preserve">
    <value>Display Number</value>
  </data>
  <data name="lbNumber.Text" xml:space="preserve">
    <value>Display Number</value>
  </data>
  <data name="lbOrderField.Help" xml:space="preserve">
    <value>Select a field.</value>
  </data>
  <data name="lbOrderField.Text" xml:space="preserve">
    <value>Display by </value>
  </data>
  <data name="lbPageControlType.Help" xml:space="preserve">
    <value>Page Control Type</value>
  </data>
  <data name="lbPageControlType.Text" xml:space="preserve">
    <value>Page Control Type</value>
  </data>
  <data name="lbPageSize.Help" xml:space="preserve">
    <value>Page Size</value>
  </data>
  <data name="lbPageSize.Text" xml:space="preserve">
    <value>Page Size</value>
  </data>
  <data name="lbRefreshTrackURL.Help" xml:space="preserve">
    <value>Refresh Track URL</value>
  </data>
  <data name="lbRefreshTrackURL.Text" xml:space="preserve">
    <value>Refresh Track URL</value>
  </data>
  <data name="lbRepeatColumn.Help" xml:space="preserve">
    <value>The repeat colunms.</value>
  </data>
  <data name="lbRepeatColumn.Text" xml:space="preserve">
    <value>Repeat Column</value>
  </data>
  <data name="lbRepeatDirection.Help" xml:space="preserve">
    <value>Repeat Direction</value>
  </data>
  <data name="lbRepeatDirection.Text" xml:space="preserve">
    <value>Repeat Direction</value>
  </data>
  <data name="lbReplaceArticlesWith.Help" xml:space="preserve">
    <value>Replace "Articles" with</value>
  </data>
  <data name="lbReplaceArticlesWith.Text" xml:space="preserve">
    <value>Replace "Articles" with</value>
  </data>
  <data name="lbReplaceArticleWith.Help" xml:space="preserve">
    <value>Replace "Article" with</value>
  </data>
  <data name="lbReplaceArticleWith.Text" xml:space="preserve">
    <value>Replace "Article" with</value>
  </data>
  <data name="lbReplaceCategoriesWith.Help" xml:space="preserve">
    <value>Replace "Categories" with</value>
  </data>
  <data name="lbReplaceCategoriesWith.Text" xml:space="preserve">
    <value>Replace "Categories" with</value>
  </data>
  <data name="lbReplaceCategoryWith.Help" xml:space="preserve">
    <value>Replace "Category" with</value>
  </data>
  <data name="lbReplaceCategoryWith.Text" xml:space="preserve">
    <value>Replace "Category" with</value>
  </data>
  <data name="lbReplaceEnvironmentTokens.Help" xml:space="preserve">
    <value>Replace Environment Tokens</value>
  </data>
  <data name="lbReplaceEnvironmentTokens.Text" xml:space="preserve">
    <value>Replace Environment Tokens</value>
  </data>
  <data name="lbSearchIndexNumber.Help" xml:space="preserve">
    <value>The number of articles that search indexer indexes each time.</value>
  </data>
  <data name="lbSearchIndexNumber.Text" xml:space="preserve">
    <value>Search Index Number</value>
  </data>
  <data name="lbSEOFriendly.Help" xml:space="preserve">
    <value>Change the page title,description and keyword to search engine friendly.</value>
  </data>
  <data name="lbSEOFriendly.Text" xml:space="preserve">
    <value>SEO Friendly</value>
  </data>
  <data name="lbShowEditIcon.Help" xml:space="preserve">
    <value>Edit icon is shown automatically without the need to use the [EDIT] token. However, this is not recommended.</value>
  </data>
  <data name="lbShowEditIcon.Text" xml:space="preserve">
    <value>Show edit icon automatically</value>
  </data>
  <data name="lbShowFeaturedFirst.Help" xml:space="preserve">
    <value>Show featured articles before other articles</value>
  </data>
  <data name="lbShowFeaturedFirst.Text" xml:space="preserve">
    <value>Show Featured First</value>
  </data>
  <data name="lbShowMeToRoles.Help" xml:space="preserve">
    <value>Show me to roles</value>
  </data>
  <data name="lbShowMeToRoles.Text" xml:space="preserve">
    <value>Show me to roles</value>
  </data>
  <data name="lbTabs.Help" xml:space="preserve">
    <value>Select a page that has an instance of Article View module.</value>
  </data>
  <data name="lbTabs.Text" xml:space="preserve">
    <value>Select a page to display content</value>
  </data>
  <data name="lbTagCloudModule.Help" xml:space="preserve">
    <value>Select tag cloud module that defines CSS of tags. Then you can use [CSSTAGS] token in article template.</value>
  </data>
  <data name="lbTagCloudModule.Text" xml:space="preserve">
    <value>Select tag cloud module</value>
  </data>
  <data name="lbTextofNewContent.Help" xml:space="preserve">
    <value>You can change the text of "New Article" link</value>
  </data>
  <data name="lbTextofNewContent.Text" xml:space="preserve">
    <value>Text of "New Article" link</value>
  </data>
  <data name="lbTokenUser.Help" xml:space="preserve">
    <value>Process User Token</value>
  </data>
  <data name="lbTokenUser.Text" xml:space="preserve">
    <value>Process User Token</value>
  </data>
  <data name="lbTrackLinkClicks.Help" xml:space="preserve">
    <value>Track Link Clicks</value>
  </data>
  <data name="lbTrackLinkClicks.Text" xml:space="preserve">
    <value>Track Link Clicks</value>
  </data>
  <data name="lbUseCategoryAddLogic.Help" xml:space="preserve">
    <value>Show articles that meet all assigned categories view permission. </value>
  </data>
  <data name="lbUseCategoryAddLogic.Text" xml:space="preserve">
    <value>Show articles that meet all assigned categories view permission</value>
  </data>
  <data name="lbWLWURL.Help" xml:space="preserve">
    <value>Use the following URL to connect to DNNArticle using a MetaWeblog enabled client such as Windows Live Writer or Word 2007.</value>
  </data>
  <data name="lbWLWURL.Text" xml:space="preserve">
    <value>MetaWeblog URL</value>
  </data>
  <data name="lbAllowSelectArticlesFromOtherPortal.Text" xml:space="preserve">
    <value>Allow to select articles from other portal</value>
  </data>
  <data name="lbAllowSelectArticlesFromOtherPortal.Text1" xml:space="preserve">
    <value>Allow no host users to select articles from other portal in sub modules</value>
  </data>
  <data name="lbExtraFieldOrder.Help" xml:space="preserve">
    <value>Sort by extra field</value>
  </data>
  <data name="lbExtraFieldOrder.Text" xml:space="preserve">
    <value>Sort by extra field</value>
  </data>
  <data name="lbExtraFieldOrderId.Help" xml:space="preserve">
    <value>Select the sort field</value>
  </data>
  <data name="lbExtraFieldOrderId.Text" xml:space="preserve">
    <value>Select the sort field</value>
  </data>
  <data name="lbAllowSelectArticlesFromOtherPortal.Help" xml:space="preserve">
    <value>If this is enabled, admins of this portal can select articles from other protal.</value>
  </data>
  <data name="lbSiteMapField.Help" xml:space="preserve">
    <value>Set the value of selected field to article priority in site map</value>
  </data>
  <data name="lbSiteMapField.Text" xml:space="preserve">
    <value>Set the value of selected field to article priority in site map</value>
  </data>
  <data name="lbSiteMapPriority.Help" xml:space="preserve">
    <value>Default Priority in Site Map</value>
  </data>
  <data name="lbSiteMapPriority.Text" xml:space="preserve">
    <value>Default Priority in Site Map</value>
  </data>
  <data name="PageDropDownList.Text" xml:space="preserve">
    <value>Drop Down List</value>
  </data>
  <data name="PageNumberList.Text" xml:space="preserve">
    <value>Number List</value>
  </data>
  <data name="PageNumberListWithoutPostBack.Text" xml:space="preserve">
    <value>Page NumberList Without PostBack</value>
  </data>
  <data name="lbHideArticleIDInViewURL.Help" xml:space="preserve">
    <value>You need to set article title in URL when you edit articles.</value>
  </data>
  <data name="lbHideArticleIDInViewURL.Text" xml:space="preserve">
    <value>Hide ArticleId In View URL</value>
  </data>
  <data name="lbHideArticleIDPath.Help" xml:space="preserve">
    <value>Page Path Template When hidding Article ID</value>
  </data>
  <data name="lbHideArticleIDPath.Text" xml:space="preserve">
    <value>Page Path Template When hidding Article ID</value>
  </data>
  <data name="lbDefaultAlias.Help" xml:space="preserve">
    <value>Default domain of View Page</value>
  </data>
  <data name="lbDefaultAlias.Text" xml:space="preserve">
    <value>Default domain of View Page</value>
  </data>
  <data name="lbGoogleMapApiKey.Help" xml:space="preserve">
    <value>Google Map Api Key</value>
  </data>
  <data name="lbGoogleMapApiKey.Text" xml:space="preserve">
    <value>Google Map Api Key</value>
  </data>
</root>